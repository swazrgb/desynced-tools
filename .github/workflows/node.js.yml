# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [17.x, 18.x, 20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npx prettier --check .
      - run: npm run generate
      - name: Archive generated files
        uses: actions/upload-artifact@v4
        with:
          name: generated-files-${{ matrix.node-version }}
          path: |
            behavior.d.ts
            behavior_dts.ts
            methods.ts
            decompile/dsinstr.ts
      - run: npm test
      - run: npm run build --if-present
      - run: npm run esbuild
      - name: Archive build files
        uses: actions/upload-artifact@v4
        with:
          name: build-files-${{ matrix.node-version }}
          path: |
            dist
            website/bundle.out.js
            website/compiler.js
      - run: mkdir website/monaco-editor-0.45.0/
        if: ${{ matrix.node-version == '20.x' }}
      - run: cp -r node_modules/monaco-editor/{LICENSE,min,min-maps} website/monaco-editor-0.45.0/
        if: ${{ matrix.node-version == '20.x' }}
      - name: Upload github pages
        uses: actions/upload-pages-artifact@v3
        if: ${{ matrix.node-version == '20.x' }}
        with:
          path: website

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
